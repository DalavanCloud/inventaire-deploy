#!/usr/bin/env zsh

echo "Generating self-signed keys for CouchDB"
openssl req -x509 -sha256 -nodes -days 1095 -newkey rsa:2048 -keyout couch.key -out couch.crt -subj "/C=/ST=/L=/O=/OU=/CN=."

# Customizing the Couchdb to the local needs.
# Using '@' as delimiters in sed instead of '/' to avoid confusion with '/' in paths
# cf http://stackoverflow.com/a/9366940/3324977
cat local.original.ini |sed "s@PROJECT_ROOT@$PROJECT_ROOT@g" > local.custom.ini

echo 'giving ownership of the keys and config files to couchdb'
sudo chown couchdb:couchdb couch.crt couch.key local.custom.ini
sudo chmod 600 couch.crt couch.key local.custom.ini
sudo cp local.custom.ini /etc/couchdb/local.ini

read "COUCH_USER?Enter a CouchDB admin name (defaults to $USERNAME) "
[ -z "$COUCH_USER" ] && COUCH_USER=$USERNAME

read "COUCH_PW?Enter the admin's password (or get a randomly generated password if let blank) "
# Random password generation source: http://security.stackexchange.com/questions/71187/one-liner-to-create-passwords-in-linux
[ -z "$COUCH_PW" ] && COUCH_PW=$(mktemp -u XXXXXXXXXXXXXXXXXXXXXXXXXXX) && echo "your password: $COUCH_PW"

sudo systemctl restart couchdb

# let the time to restart
sleep 2

curl -kX PUT https://localhost:6984/_config/admins/$COUCH_USER -d '"'$COUCH_PW'"'
# uncomment require_valid_user
sudo sed -i "s/^;require_valid_user/require_valid_user/g" /etc/couchdb/local.ini
sudo systemctl restart couchdb

# Databases will then be created by the nodejs server at first startup
# You still got to setup database replication

# Install couchdb-dump for future uses
curl https://raw.githubusercontent.com/danielebailo/couchdb-dump/e873182bf81bd5243f13999b5feeb99e0d79f1f3/couchdb-backup.sh | sudo tee /usr/local/bin/couchdb-backup
sudo chmod 777 /usr/local/bin/couchdb-backup
